"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/generate-emojis/route";
exports.ids = ["app/api/generate-emojis/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-emojis%2Froute&page=%2Fapi%2Fgenerate-emojis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-emojis%2Froute.ts&appDir=F%3A%5Cemjio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=F%3A%5Cemjio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-emojis%2Froute&page=%2Fapi%2Fgenerate-emojis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-emojis%2Froute.ts&appDir=F%3A%5Cemjio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=F%3A%5Cemjio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var F_emjio_app_api_generate_emojis_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/generate-emojis/route.ts */ \"(rsc)/./app/api/generate-emojis/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/generate-emojis/route\",\n        pathname: \"/api/generate-emojis\",\n        filename: \"route\",\n        bundlePath: \"app/api/generate-emojis/route\"\n    },\n    resolvedPagePath: \"F:\\\\emjio\\\\app\\\\api\\\\generate-emojis\\\\route.ts\",\n    nextConfigOutput,\n    userland: F_emjio_app_api_generate_emojis_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/generate-emojis/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5lcmF0ZS1lbW9qaXMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdlbmVyYXRlLWVtb2ppcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdlbmVyYXRlLWVtb2ppcyUyRnJvdXRlLnRzJmFwcERpcj1GJTNBJTVDZW1qaW8lNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUYlM0ElNUNlbWppbyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDWTtBQUMzRTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1lbW9qaS1nZW5lcmF0b3IvP2U2YmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRjpcXFxcZW1qaW9cXFxcYXBwXFxcXGFwaVxcXFxnZW5lcmF0ZS1lbW9qaXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dlbmVyYXRlLWVtb2ppcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmVyYXRlLWVtb2ppc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2VuZXJhdGUtZW1vamlzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiRjpcXFxcZW1qaW9cXFxcYXBwXFxcXGFwaVxcXFxnZW5lcmF0ZS1lbW9qaXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZ2VuZXJhdGUtZW1vamlzL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-emojis%2Froute&page=%2Fapi%2Fgenerate-emojis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-emojis%2Froute.ts&appDir=F%3A%5Cemjio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=F%3A%5Cemjio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/generate-emojis/route.ts":
/*!******************************************!*\
  !*** ./app/api/generate-emojis/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants_emojiStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants/emojiStyles */ \"(rsc)/./app/constants/emojiStyles.ts\");\n/* harmony import */ var _constants_emotionMappings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants/emotionMappings */ \"(rsc)/./app/constants/emotionMappings.ts\");\n\n\n\n\nasync function POST(request) {\n    console.log(\"=== 使用的是 route.ts 文件 ===\");\n    try {\n        const { subjectDescription, keywords, selectedStyle = \"cute-cartoon\", mode = \"album\", count = 16 // 默认值\n         } = await request.json();\n        console.log(\"接收到的参数:\", {\n            subjectDescription,\n            keywords,\n            selectedStyle,\n            mode,\n            count\n        });\n        // 保持原始的验证逻辑，但是适配新的模式\n        if (!subjectDescription || !keywords) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"输入参数不完整\"\n            }, {\n                status: 400\n            });\n        }\n        // 动态验证关键词数量，但保持宽松\n        const expectedCount = mode === \"single\" ? 1 : mode === \"album\" ? count : keywords.length;\n        if (keywords.length === 0) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"请至少输入一个关键词\"\n            }, {\n                status: 400\n            });\n        }\n        // 验证环境变量\n        if (!process.env.VOLC_ACCESS_KEY || !process.env.VOLC_SECRET_KEY) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"服务器配置错误：缺少API密钥\"\n            }, {\n                status: 500\n            });\n        }\n        // 获取风格配置，如果找不到就使用默认配置\n        const styleConfig = _constants_emojiStyles__WEBPACK_IMPORTED_MODULE_2__.EMOJI_STYLES.find((style)=>style.id === selectedStyle);\n        const stylePrompt = styleConfig ? styleConfig.prompt : \"卡通风格, Q萌可爱\";\n        const emojis = [];\n        let sharedSeed = -1; // 用于专辑模式保持一致性\n        // 为每个关键词生成表情包\n        for(let i = 0; i < keywords.length; i++){\n            const keyword = keywords[i];\n            // 获取详细的表情描述\n            const emotionDescription = (0,_constants_emotionMappings__WEBPACK_IMPORTED_MODULE_3__.getEmotionDescription)(keyword);\n            // 按照即梦API建议优化prompt结构：风格+主体描述+美学+氛围\n            let prompt;\n            if (mode === \"album\") {\n                // 专辑模式：强调角色一致性\n                prompt = `${stylePrompt}，${subjectDescription}，${emotionDescription}，同一个角色，保持角色外观完全一致，简洁纯色背景，高质量渲染，角色一致性，same character design，consistent style`;\n            } else {\n                // 单品模式：标准结构\n                prompt = `${stylePrompt}，${subjectDescription}，${emotionDescription}，简洁纯色背景，高质量渲染，精细细节`;\n            }\n            try {\n                console.log(`第${i + 1}张图片 关键词: ${keyword}`);\n                console.log(`第${i + 1}张图片 表情描述: ${emotionDescription}`);\n                console.log(`第${i + 1}张图片 完整Prompt: ${prompt}`);\n                // 调用即梦AI生成图片，传入shared seed以保持一致性\n                const result = await generateImageWithVolcAI(prompt, mode === \"album\" ? sharedSeed : -1);\n                // 如果是专辑模式的第一张图，保存seed\n                if (mode === \"album\" && sharedSeed === -1 && result.seed) {\n                    sharedSeed = result.seed;\n                }\n                emojis.push({\n                    id: i + 1,\n                    keyword: keyword,\n                    imageData: result.imageData\n                });\n                // 添加延迟避免API限制\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            } catch (error) {\n                console.error(`生成第${i + 1}张图片失败:`, error);\n                // 如果单张图片生成失败，使用占位图片\n                emojis.push({\n                    id: i + 1,\n                    keyword: keyword,\n                    imageData: generatePlaceholderImage(keyword)\n                });\n            }\n        }\n        // 在生成完所有表情包后，如果是专辑模式，生成banner图\n        if (mode === \"album\" && emojis.length > 0) {\n            try {\n                console.log(\"开始生成专辑banner图...\");\n                // 生成banner图的prompt\n                const bannerPrompt = `${stylePrompt}，${subjectDescription}，((没有字)),((没有字体)), 集合展示，多种表情状态组合，横版构图，宽屏比例，高质量渲染，精美设计，专辑封面风格`;\n                console.log(\"Banner Prompt:\", bannerPrompt);\n                // 使用相同的seed确保风格一致\n                const bannerResult = await generateBannerWithVolcAI(bannerPrompt, sharedSeed);\n                if (bannerResult.imageData) {\n                    console.log(\"Banner图生成成功\");\n                    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                        emojis,\n                        bannerImage: bannerResult.imageData,\n                        seed: sharedSeed,\n                        subjectDescription,\n                        selectedStyle,\n                        mode,\n                        message: `成功生成${emojis.length}个表情包和专辑封面`\n                    });\n                }\n            } catch (error) {\n                console.error(\"Banner图生成失败:\", error);\n            // 即使banner生成失败，也返回表情包结果\n            }\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            emojis,\n            seed: sharedSeed,\n            subjectDescription,\n            selectedStyle,\n            mode,\n            message: `成功生成${emojis.length}个表情包`\n        });\n    } catch (error) {\n        console.error(\"生成表情包失败:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"服务器内部错误\"\n        }, {\n            status: 500\n        });\n    }\n}\n// 修改原始函数，支持seed参数\nasync function generateImageWithVolcAI(prompt, seed = -1) {\n    const accessKey = process.env.VOLC_ACCESS_KEY;\n    const secretKey = process.env.VOLC_SECRET_KEY;\n    const region = \"cn-north-1\";\n    const service = \"cv\";\n    const host = \"visual.volcengineapi.com\";\n    const endpoint = \"https://visual.volcengineapi.com\";\n    // 生成随机seed（如果没有传入）\n    const actualSeed = seed === -1 ? Math.floor(Math.random() * 1000000) : seed;\n    // 请求参数 - 保持您的原始参数\n    const requestBody = {\n        req_key: \"jimeng_high_aes_general_v21_L\",\n        prompt: prompt,\n        width: 512,\n        height: 512,\n        scale: 7.5,\n        seed: 1244122,\n        use_pre_llm: false,\n        ddim_steps: 25,\n        return_url: true,\n        use_sr: false,\n        logo_info: {\n            add_logo: false\n        }\n    };\n    const bodyString = JSON.stringify(requestBody);\n    // 构建查询参数\n    const queryParams = {\n        \"Action\": \"CVProcess\",\n        \"Version\": \"2022-08-31\"\n    };\n    // 格式化查询字符串\n    const formatQuery = (parameters)=>{\n        let requestParameters = \"\";\n        for (const key of Object.keys(parameters).sort()){\n            requestParameters += key + \"=\" + parameters[key] + \"&\";\n        }\n        return requestParameters.slice(0, -1);\n    };\n    const canonicalQuerystring = formatQuery(queryParams);\n    // 生成时间戳\n    const t = new Date();\n    const currentDate = t.toISOString().replace(/[-:]/g, \"\").replace(/\\.\\d{3}/, \"\");\n    const datestamp = currentDate.split(\"T\")[0];\n    // 计算payload hash\n    const payloadHash = crypto__WEBPACK_IMPORTED_MODULE_1___default().createHash(\"sha256\").update(bodyString).digest(\"hex\");\n    // 构建canonical headers\n    const contentType = \"application/json\";\n    const canonicalHeaders = \"content-type:\" + contentType + \"\\n\" + \"host:\" + host + \"\\n\" + \"x-content-sha256:\" + payloadHash + \"\\n\" + \"x-date:\" + currentDate + \"\\n\";\n    const signedHeaders = \"content-type;host;x-content-sha256;x-date\";\n    // 创建canonical request\n    const canonicalRequest = [\n        \"POST\",\n        \"/\",\n        canonicalQuerystring,\n        canonicalHeaders,\n        signedHeaders,\n        payloadHash\n    ].join(\"\\n\");\n    // 创建string to sign\n    const algorithm = \"HMAC-SHA256\";\n    const credentialScope = `${datestamp}/${region}/${service}/request`;\n    const stringToSign = [\n        algorithm,\n        currentDate,\n        credentialScope,\n        crypto__WEBPACK_IMPORTED_MODULE_1___default().createHash(\"sha256\").update(canonicalRequest).digest(\"hex\")\n    ].join(\"\\n\");\n    // 计算签名\n    const sign = (key, msg)=>{\n        return crypto__WEBPACK_IMPORTED_MODULE_1___default().createHmac(\"sha256\", key).update(msg).digest();\n    };\n    const kDate = sign(secretKey, datestamp);\n    const kRegion = sign(kDate, region);\n    const kService = sign(kRegion, service);\n    const kSigning = sign(kService, \"request\");\n    const signature = crypto__WEBPACK_IMPORTED_MODULE_1___default().createHmac(\"sha256\", kSigning).update(stringToSign).digest(\"hex\");\n    // 构建Authorization头\n    const authorizationHeader = `${algorithm} Credential=${accessKey}/${credentialScope}, SignedHeaders=${signedHeaders}, Signature=${signature}`;\n    // 构建请求头\n    const headers = {\n        \"X-Date\": currentDate,\n        \"Authorization\": authorizationHeader,\n        \"X-Content-Sha256\": payloadHash,\n        \"Content-Type\": contentType,\n        \"Host\": host\n    };\n    // 发送请求\n    const requestUrl = `${endpoint}?${canonicalQuerystring}`;\n    const response = await fetch(requestUrl, {\n        method: \"POST\",\n        headers: headers,\n        body: bodyString\n    });\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"即梦AI API错误响应:\", errorText);\n        throw new Error(`即梦AI API请求失败: ${response.status} ${response.statusText}`);\n    }\n    const result = await response.json();\n    console.log(\"即梦AI响应:\", result);\n    console.log(\"---------------------------------------\", result.code === 10000 && result.data);\n    // 处理响应 - 保持您的原始处理逻辑\n    if (result.code === 10000 && result.data) {\n        // 检查是否有图片URL\n        if (result.data.image_urls && result.data.image_urls.length > 0) {\n            const imageUrl = result.data.image_urls[0];\n            console.log(\"获取到图片URL:\", imageUrl);\n            // 添加调试代码\n            console.log(\"开始下载图片...\");\n            // 下载图片并转换为base64\n            const imageResponse = await fetch(imageUrl);\n            if (!imageResponse.ok) {\n                throw new Error(`下载图片失败: ${imageResponse.status}`);\n            }\n            const imageBuffer = await imageResponse.arrayBuffer();\n            const base64 = Buffer.from(imageBuffer).toString(\"base64\");\n            // 添加调试代码\n            console.log(\"图片下载完成\");\n            return {\n                imageData: `data:image/png;base64,${base64}`,\n                seed: actualSeed\n            };\n        }\n        // 检查是否有base64数据\n        if (result.data.binary_data_base64 && result.data.binary_data_base64.length > 0) {\n            const base64Data = result.data.binary_data_base64[0];\n            // 添加调试代码\n            console.log(\"获取到base64数据\");\n            return {\n                imageData: `data:image/png;base64,${base64Data}`,\n                seed: actualSeed\n            };\n        }\n        throw new Error(\"响应中没有找到图片数据\");\n    } else {\n        console.error(\"即梦AI返回错误:\", result);\n        throw new Error(`即梦AI返回错误: ${result.message || \"未知错误\"}`);\n    }\n}\n// 修复Banner生成函数 - 使用API支持的横版尺寸\nasync function generateBannerWithVolcAI(prompt, seed = -1) {\n    const accessKey = process.env.VOLC_ACCESS_KEY;\n    const secretKey = process.env.VOLC_SECRET_KEY;\n    const actualSeed = seed === -1 ? Math.floor(Math.random() * 1000000) : seed;\n    const host = \"visual.volcengineapi.com\";\n    const region = \"cn-north-1\";\n    const service = \"cv\";\n    const endpoint = \"https://visual.volcengineapi.com\";\n    // 使用API支持的16:9横版尺寸\n    const requestBody = {\n        req_key: \"jimeng_high_aes_general_v21_L\",\n        prompt: prompt,\n        width: 512,\n        height: 288,\n        scale: 7.5,\n        seed: actualSeed,\n        use_pre_llm: false,\n        ddim_steps: 25,\n        return_url: true,\n        use_sr: false,\n        logo_info: {\n            add_logo: false\n        }\n    };\n    // 完全复用主函数的签名逻辑\n    const bodyString = JSON.stringify(requestBody);\n    const queryParams = {\n        \"Action\": \"CVProcess\",\n        \"Version\": \"2022-08-31\"\n    };\n    const formatQuery = (parameters)=>{\n        let requestParameters = \"\";\n        for (const key of Object.keys(parameters).sort()){\n            requestParameters += key + \"=\" + parameters[key] + \"&\";\n        }\n        return requestParameters.slice(0, -1);\n    };\n    const canonicalQuerystring = formatQuery(queryParams);\n    const t = new Date();\n    const currentDate = t.toISOString().replace(/[-:]/g, \"\").replace(/\\.\\d{3}/, \"\");\n    const datestamp = currentDate.split(\"T\")[0];\n    const payloadHash = crypto__WEBPACK_IMPORTED_MODULE_1___default().createHash(\"sha256\").update(bodyString).digest(\"hex\");\n    const contentType = \"application/json\";\n    const canonicalHeaders = \"content-type:\" + contentType + \"\\n\" + \"host:\" + host + \"\\n\" + \"x-content-sha256:\" + payloadHash + \"\\n\" + \"x-date:\" + currentDate + \"\\n\";\n    const signedHeaders = \"content-type;host;x-content-sha256;x-date\";\n    const canonicalRequest = [\n        \"POST\",\n        \"/\",\n        canonicalQuerystring,\n        canonicalHeaders,\n        signedHeaders,\n        payloadHash\n    ].join(\"\\n\");\n    const algorithm = \"HMAC-SHA256\";\n    const credentialScope = `${datestamp}/${region}/${service}/request`;\n    const stringToSign = [\n        algorithm,\n        currentDate,\n        credentialScope,\n        crypto__WEBPACK_IMPORTED_MODULE_1___default().createHash(\"sha256\").update(canonicalRequest).digest(\"hex\")\n    ].join(\"\\n\");\n    const sign = (key, msg)=>{\n        return crypto__WEBPACK_IMPORTED_MODULE_1___default().createHmac(\"sha256\", key).update(msg).digest();\n    };\n    const kDate = sign(secretKey, datestamp);\n    const kRegion = sign(kDate, region);\n    const kService = sign(kRegion, service);\n    const kSigning = sign(kService, \"request\");\n    const signature = crypto__WEBPACK_IMPORTED_MODULE_1___default().createHmac(\"sha256\", kSigning).update(stringToSign).digest(\"hex\");\n    const authorizationHeader = `${algorithm} Credential=${accessKey}/${credentialScope}, SignedHeaders=${signedHeaders}, Signature=${signature}`;\n    const headers = {\n        \"X-Date\": currentDate,\n        \"Authorization\": authorizationHeader,\n        \"X-Content-Sha256\": payloadHash,\n        \"Content-Type\": contentType,\n        \"Host\": host\n    };\n    const requestUrl = `${endpoint}?${canonicalQuerystring}`;\n    console.log(\"Banner生成请求参数:\", {\n        width: 512,\n        height: 288,\n        prompt: prompt.substring(0, 100) + \"...\",\n        seed: actualSeed\n    });\n    const response = await fetch(requestUrl, {\n        method: \"POST\",\n        headers: headers,\n        body: bodyString\n    });\n    if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Banner API Response:\", errorText);\n        throw new Error(`Banner生成失败: ${response.status} - ${errorText}`);\n    }\n    const result = await response.json();\n    console.log(\"Banner API Result Code:\", result.code);\n    if (result.code === 10000 && result.data) {\n        if (result.data.image_urls && result.data.image_urls.length > 0) {\n            const imageUrl = result.data.image_urls[0];\n            console.log(\"Banner生成成功，URL方式\");\n            const imageResponse = await fetch(imageUrl);\n            const imageBuffer = await imageResponse.arrayBuffer();\n            const base64 = Buffer.from(imageBuffer).toString(\"base64\");\n            return {\n                imageData: base64,\n                seed: actualSeed\n            };\n        }\n        if (result.data.binary_data_base64 && result.data.binary_data_base64.length > 0) {\n            const base64Data = result.data.binary_data_base64[0];\n            console.log(\"Banner生成成功，Base64方式\");\n            return {\n                imageData: base64Data,\n                seed: actualSeed\n            };\n        }\n        throw new Error(\"Banner响应中没有找到图片数据\");\n    } else {\n        throw new Error(`Banner生成失败: ${result.message || \"未知错误\"} (Code: ${result.code})`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/generate-emojis/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/constants/emojiStyles.ts":
/*!**************************************!*\
  !*** ./app/constants/emojiStyles.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMOJI_STYLES: () => (/* binding */ EMOJI_STYLES)\n/* harmony export */ });\nconst EMOJI_STYLES = [\n    {\n        id: \"cute-cartoon\",\n        name: \"Q萌卡通风\",\n        description: \"圆润线条勾勒，明亮柔和色彩\",\n        prompt: \"艺术家Yeoniu Choi风格，简笔画，卡通，粗线条勾勒，治愈，毛绒，极简，可爱温馨，治愈系画风格，简洁，干净，颜色鲜艳\",\n        thumbnail: \"/assets/styles/01.png\"\n    },\n    {\n        id: \"simple-line\",\n        name: \"简约线条风\",\n        description: \"简洁线条，黑白色或少量色彩搭配\",\n        prompt: \"手绘线稿，涂鸦风格，简约，黑白线勾勒，动态视觉，手稿，大师杰作，白色背景。超扁平插画，简单插画,只有线条,只有线条,只有线条,黑白线稿,黑白线稿,黑白线稿,只有线条,简笔画，黑白线稿，只有线条，((没有色块))，没有色块,没有色块,没有色块,没有色块,没有色块,没有阴影，by Jean Jullien，by 长场雄\",\n        thumbnail: \"/assets/styles/02.png\"\n    },\n    {\n        id: \"stereo-3d\",\n        name: \"Q版3d卡通\",\n        description: \"3D建模，卡通角色/物品具立体感\",\n        prompt: \"Q版卡通IP以3D模型呈现，背景为干净的单色，色彩鲜艳，细节错综复杂。卡通风格展现高清晰度，正面构图色彩鲜艳，质感逼真。相机焦点锐利，辅以柔和的灯光，凸显出欢快而生动的表情。\",\n        thumbnail: \"/assets/styles/03.png\"\n    },\n    {\n        id: \"festival-special\",\n        name: \"粗线条\",\n        description: \"粗线条\",\n        // prompt: '艺术家Yeoniu Choi风格，简笔画，卡通，粗线条勾勒，((简笔画))，卡通，((粗线条勾勒))，干净的背景，彩色的画面',\n        prompt: \"艺术家Yeoniu Choi风格，简笔画，卡通，粗线条勾勒，像梵高先生的最新简约风，简笔画漫画，\",\n        thumbnail: \"/assets/styles/04.png\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvY29uc3RhbnRzL2Vtb2ppU3R5bGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNQSxlQUE2QjtJQUN0QztRQUNJQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiQyxRQUFRO1FBQ1JDLFdBQVc7SUFDZjtJQUNBO1FBQ0lKLElBQUk7UUFDSkMsTUFBTTtRQUNOQyxhQUFhO1FBQ2JDLFFBQVE7UUFDUkMsV0FBVztJQUNmO0lBQ0E7UUFDSUosSUFBSTtRQUNKQyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsUUFBUTtRQUNSQyxXQUFXO0lBQ2Y7SUFDQTtRQUNJSixJQUFJO1FBQ0pDLE1BQU07UUFDTkMsYUFBYTtRQUNiLDRFQUE0RTtRQUM1RUMsUUFBUTtRQUNSQyxXQUFXO0lBQ2Y7Q0E0Q0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWVtb2ppLWdlbmVyYXRvci8uL2FwcC9jb25zdGFudHMvZW1vamlTdHlsZXMudHM/MGUzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbW9qaVN0eWxlIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEVNT0pJX1NUWUxFUzogRW1vamlTdHlsZVtdID0gW1xyXG4gICAge1xyXG4gICAgICAgIGlkOiAnY3V0ZS1jYXJ0b29uJyxcclxuICAgICAgICBuYW1lOiAnUeiQjOWNoemAmumjjicsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICflnIbmtqbnur/mnaHli77li5LvvIzmmI7kuq7mn5TlkozoibLlvaknLFxyXG4gICAgICAgIHByb21wdDogJ+iJuuacr+Wutlllb25pdSBDaG9p6aOO5qC877yM566A56yU55S777yM5Y2h6YCa77yM57KX57q/5p2h5Yu+5YuS77yM5rK75oSI77yM5q+b57uS77yM5p6B566A77yM5Y+v54ix5rip6aao77yM5rK75oSI57O755S76aOO5qC877yM566A5rSB77yM5bmy5YeA77yM6aKc6Imy6bKc6ImzJyxcclxuICAgICAgICB0aHVtYm5haWw6ICcvYXNzZXRzL3N0eWxlcy8wMS5wbmcnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGlkOiAnc2ltcGxlLWxpbmUnLFxyXG4gICAgICAgIG5hbWU6ICfnroDnuqbnur/mnaHpo44nLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAn566A5rSB57q/5p2h77yM6buR55m96Imy5oiW5bCR6YeP6Imy5b2p5pCt6YWNJyxcclxuICAgICAgICBwcm9tcHQ6ICfmiYvnu5jnur/nqL/vvIzmtoLpuKbpo47moLzvvIznroDnuqbvvIzpu5Hnmb3nur/li77li5LvvIzliqjmgIHop4bop4nvvIzmiYvnqL/vvIzlpKfluIjmnbDkvZzvvIznmb3oibLog4zmma/jgILotoXmiYHlubPmj5LnlLvvvIznroDljZXmj5LnlLss5Y+q5pyJ57q/5p2hLOWPquaciee6v+adoSzlj6rmnInnur/mnaEs6buR55m957q/56i/LOm7keeZvee6v+eovyzpu5Hnmb3nur/nqL8s5Y+q5pyJ57q/5p2hLOeugOeslOeUu++8jOm7keeZvee6v+eov++8jOWPquaciee6v+adoe+8jCgo5rKh5pyJ6Imy5Z2XKSnvvIzmsqHmnInoibLlnZcs5rKh5pyJ6Imy5Z2XLOayoeacieiJsuWdlyzmsqHmnInoibLlnZcs5rKh5pyJ6Imy5Z2XLOayoeaciemYtOW9se+8jGJ5IEplYW4gSnVsbGllbu+8jGJ5IOmVv+WcuumbhCcsXHJcbiAgICAgICAgdGh1bWJuYWlsOiAnL2Fzc2V0cy9zdHlsZXMvMDIucG5nJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBpZDogJ3N0ZXJlby0zZCcsXHJcbiAgICAgICAgbmFtZTogJ1HniYgzZOWNoemAmicsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICczROW7uuaooe+8jOWNoemAmuinkuiJsi/nianlk4Hlhbfnq4vkvZPmhJ8nLFxyXG4gICAgICAgIHByb21wdDogJ1HniYjljaHpgJpJUOS7pTNE5qih5Z6L5ZGI546w77yM6IOM5pmv5Li65bmy5YeA55qE5Y2V6Imy77yM6Imy5b2p6bKc6Imz77yM57uG6IqC6ZSZ57u85aSN5p2C44CC5Y2h6YCa6aOO5qC85bGV546w6auY5riF5pmw5bqm77yM5q2j6Z2i5p6E5Zu+6Imy5b2p6bKc6Imz77yM6LSo5oSf6YC855yf44CC55u45py654Sm54K56ZSQ5Yip77yM6L6F5Lul5p+U5ZKM55qE54Gv5YWJ77yM5Ye45pi+5Ye65qyi5b+r6ICM55Sf5Yqo55qE6KGo5oOF44CCJyxcclxuICAgICAgICB0aHVtYm5haWw6ICcvYXNzZXRzL3N0eWxlcy8wMy5wbmcnXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIGlkOiAnZmVzdGl2YWwtc3BlY2lhbCcsXHJcbiAgICAgICAgbmFtZTogJ+eyl+e6v+adoScsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICfnspfnur/mnaEnLFxyXG4gICAgICAgIC8vIHByb21wdDogJ+iJuuacr+Wutlllb25pdSBDaG9p6aOO5qC877yM566A56yU55S777yM5Y2h6YCa77yM57KX57q/5p2h5Yu+5YuS77yMKCjnroDnrJTnlLspKe+8jOWNoemAmu+8jCgo57KX57q/5p2h5Yu+5YuSKSnvvIzlubLlh4DnmoTog4zmma/vvIzlvanoibLnmoTnlLvpnaInLFxyXG4gICAgICAgIHByb21wdDogJ+iJuuacr+Wutlllb25pdSBDaG9p6aOO5qC877yM566A56yU55S777yM5Y2h6YCa77yM57KX57q/5p2h5Yu+5YuS77yM5YOP5qK16auY5YWI55Sf55qE5pyA5paw566A57qm6aOO77yM566A56yU55S75ryr55S777yMJyxcclxuICAgICAgICB0aHVtYm5haWw6ICcvYXNzZXRzL3N0eWxlcy8wNC5wbmcnXHJcbiAgICB9LFxyXG4gICAgLy8ge1xyXG4gICAgLy8gICAgIGlkOiAnZnVubnktd2VpcmQnLFxyXG4gICAgLy8gICAgIG5hbWU6ICflj6/niLHliqjmvKvmj5LnlLvov6rlo6vlsLzpo47moLwnLFxyXG4gICAgLy8gICAgIGRlc2NyaXB0aW9uOiAn5aS45byg5pCe56yR5b2i6LGhL+WKqOS9nCcsXHJcbiAgICAvLyAgICAgcHJvbXB0OiAn5Y+v54ix5Yqo5ryr5o+S55S76L+q5aOr5bC86aOO5qC8LCDnsr7oh7TnmoTnu4boioLvvIzotoXpq5jmuIXvvIw4ayDkuI3mmL7npLrnvZHmoLznur/vvIznmb3oibLog4zmma8nLFxyXG4gICAgLy8gICAgIHRodW1ibmFpbDogJy9hc3NldHMvc3R5bGVzL2Z1bm55LXdlaXJkLnBuZydcclxuICAgIC8vIH0sXHJcbiAgICAvLyB7XHJcbiAgICAvLyAgICAgaWQ6ICdyZXRyby1hbmltZScsXHJcbiAgICAvLyAgICAgbmFtZTogJ+WkjeWPpOWKqOa8q+mjjicsXHJcbiAgICAvLyAgICAgZGVzY3JpcHRpb246ICflpI3lj6TliqjmvKvnur/mnaHjgIHoibLlvanpo47moLwnLFxyXG4gICAgLy8gICAgIHByb21wdDogJ+S4reWbveWPpOmjjuWKqOeUu+eUu+mjjuagvCcsXHJcbiAgICAvLyAgICAgdGh1bWJuYWlsOiAnL2Fzc2V0cy9zdHlsZXMvcmV0cm8tYW5pbWUucG5nJ1xyXG4gICAgLy8gfSxcclxuICAgIC8vIHtcclxuICAgIC8vICAgICBpZDogJ2ZyZXNoLXdhdGVyY29sb3InLFxyXG4gICAgLy8gICAgIG5hbWU6ICfmuIXmlrDmsLTlvanpo44nLFxyXG4gICAgLy8gICAgIGRlc2NyaXB0aW9uOiAn5rC05b2p5oqA5rOV57uY5Yi277yM5riF5paw5reh6ZuF6Imy6LCDJyxcclxuICAgIC8vICAgICBwcm9tcHQ6ICfmsLTlvanmioDms5Xnu5jliLbvvIzmuIXmlrDmt6Hpm4XoibLosIPvvIzoh6rnhLbmmZXmn5PvvIzlkYjnjrDmpI3nianjgIHlsI/liqjnianmiJbkurrnianvvIzmiYvlhpnmloflrZfvvIzmuKnppqjmlofoibonLFxyXG4gICAgLy8gICAgIHRodW1ibmFpbDogJy9hc3NldHMvc3R5bGVzL2ZyZXNoLXdhdGVyY29sb3IucG5nJ1xyXG4gICAgLy8gfSxcclxuXHJcbiAgICAvLyB7XHJcbiAgICAvLyAgICAgaWQ6ICdwb3AtY3VsdHVyZScsXHJcbiAgICAvLyAgICAgbmFtZTogJ+a1geihjOaWh+WMlumjjicsXHJcbiAgICAvLyAgICAgZGVzY3JpcHRpb246ICfono3lhaXng63pl6jlvbHop4bjgIHmuLjmiI/jgIHnu7zoibrlhYPntKAnLFxyXG4gICAgLy8gICAgIHByb21wdDogJ+iejeWFpeeDremXqOW9seinhuOAgea4uOaIj+OAgee7vOiJuuWFg+e0oO+8jOS7peeDremXqOinkuiJsuS4uuS4u++8jOe7j+WFuOWcuuaZr+WPsOivjee7k+WQiOaQnuaAquW9ouixoe+8jOa1geihjOail+S6kuWKqCcsXHJcbiAgICAvLyAgICAgdGh1bWJuYWlsOiAnL2Fzc2V0cy9zdHlsZXMvcG9wLWN1bHR1cmUucG5nJ1xyXG4gICAgLy8gfSxcclxuICAgIC8vIHtcclxuICAgIC8vICAgICBpZDogJ2N1dGUtcGV0JyxcclxuICAgIC8vICAgICBuYW1lOiAn6JCM5a6g5Y+v54ix6aOOJyxcclxuICAgIC8vICAgICBkZXNjcmlwdGlvbjogJ+WPr+eIseWuoOeJqeS4uuWOn+WeiycsXHJcbiAgICAvLyAgICAgcHJvbXB0OiAn5Y+v54ix5a6g54mp77yI54yr54uX5YWU77yJ5Li65Y6f5Z6L77yM5o2V5o2J6JCM5oCB6KGo5oOF77yI5peg6L6c55y856We44CB5byA5b+D56yR77yJ5ZKM5pel5bi45Yqo5L2c77yI5omT5rua44CB6IiU5q+b77yJ77yM5rCU5rOh5paH5a2XJyxcclxuICAgIC8vICAgICB0aHVtYm5haWw6ICcvYXNzZXRzL3N0eWxlcy9jdXRlLXBldC5wbmcnXHJcbiAgICAvLyB9LFxyXG4gICAgLy8ge1xyXG4gICAgLy8gICAgIGlkOiAnZm9vZC10ZW1wdGF0aW9uJyxcclxuICAgIC8vICAgICBuYW1lOiAn576O6aOf6K+x5oOR6aOOJyxcclxuICAgIC8vICAgICBkZXNjcmlwdGlvbjogJ+e+jumjn+WNoemAmuWMlicsXHJcbiAgICAvLyAgICAgcHJvbXB0OiAn576O6aOf5Y2h6YCa5YyW77yI5rGJ5aCh44CB5Yaw5reH5reL44CB6JuL57OV77yJ77yM576O6aOf6KGo5oOF5Yqo5L2c5Liw5a+M77yI5rGJ5aCh5byg5Zi044CB5Yaw5reH5reL6IS457qi77yJ77yM6YWNXCLmg7PlkINcIlwi576O5ZGzXCLmloflrZcnLFxyXG4gICAgLy8gICAgIHRodW1ibmFpbDogJy9hc3NldHMvc3R5bGVzL2Zvb2QtdGVtcHRhdGlvbi5wbmcnXHJcbiAgICAvLyB9XHJcbl07ICJdLCJuYW1lcyI6WyJFTU9KSV9TVFlMRVMiLCJpZCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInByb21wdCIsInRodW1ibmFpbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/constants/emojiStyles.ts\n");

/***/ }),

/***/ "(rsc)/./app/constants/emotionMappings.ts":
/*!******************************************!*\
  !*** ./app/constants/emotionMappings.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMOTION_MAPPINGS: () => (/* binding */ EMOTION_MAPPINGS),\n/* harmony export */   getEmotionDescription: () => (/* binding */ getEmotionDescription),\n/* harmony export */   getSupportedEmotions: () => (/* binding */ getSupportedEmotions),\n/* harmony export */   hasEmotionMapping: () => (/* binding */ hasEmotionMapping)\n/* harmony export */ });\n// 表情关键词到详细prompt的映射\nconst EMOTION_MAPPINGS = {\n    // 开心类\n    \"开心\": \"脸上露出灿烂笑容，眼睛弯成月牙形，嘴角高高上扬，两颊微红，整体表情愉悦满足\",\n    \"大笑\": \"张大嘴巴哈哈大笑，眼睛眯成一条线，眉毛上扬，可能有眼泪从笑出来，身体略微后仰\",\n    \"哈哈\": \"捂着肚子大笑，眼睛闭起，嘴巴张得很大，身体前倾，笑得很夸张\",\n    \"嘿嘿\": \"坏笑表情，一只眼睛眨着，嘴角歪向一边，手可能在摸头或做鬼脸动作\",\n    \"偷笑\": \"用手捂住嘴巴，眼睛弯弯，透过指缝偷偷笑，表情狡黠可爱\",\n    \"微笑\": \"嘴角轻微上扬，眼神温和，表情平静祥和，给人温暖感觉\",\n    \"傻笑\": \"呆呆的笑容，眼神有点迷茫，嘴巴张开，表情憨憨的很可爱\",\n    \"狂笑\": \"疯狂大笑，头向后仰，嘴巴张到最大，眼泪都笑出来了，表情极度夸张\",\n    // 生气类\n    \"生气\": \"眉头紧皱成倒八字，眼神凌厉，嘴巴紧抿或微张，脸颊鼓起，整体表情严肃愤怒\",\n    \"愤怒\": \"双眉紧锁，眼睛瞪得很大，咬牙切齿，脸红脖子粗，拳头紧握，怒火中烧的样子\",\n    \"火大\": \"头顶冒火，脸通红，眼睛里有火焰，咬牙切齿，双手叉腰或握拳\",\n    \"暴怒\": \"眼睛瞪得像铜铃，眉毛竖起，张大嘴巴咆哮，脸色铁青，浑身发抖\",\n    \"郁闷\": \"眉头紧锁，嘴巴向下撇，眼神无神，托着下巴，整体表情沮丧无奈\",\n    \"无语\": \"翻白眼，嘴巴微张成O型，一手扶额，表情无奈又无语\",\n    \"翻白眼\": \"眼球向上翻，只露出眼白，嘴角下撇，表情鄙视不屑\",\n    \"黑线\": \"额头上有黑色井字线，眼神死鱼眼，嘴角抽搐，表情尴尬无语\",\n    // 哭泣类\n    \"哭泣\": \"眼泪从眼角流下，嘴巴向下弯，眉毛下垂，用手擦拭眼泪，表情伤心\",\n    \"大哭\": \"眼泪如瀑布般流下，张大嘴巴号啕大哭，眼睛红肿，情绪激动\",\n    \"流泪\": \"眼中含泪，泪珠在眼眶中打转，表情坚强中带着脆弱\",\n    \"委屈\": \"嘴巴向下撇，眼中含泪，眉毛下垂，表情可怜兮兮\",\n    \"难过\": \"低着头，眼神暗淡，嘴角下垂，整体表情忧郁沮丧\",\n    \"伤心\": \"眼泪无声流下，表情痛苦，手可能捂着胸口，整体很悲伤\",\n    \"痛哭\": \"双手捂脸大哭，身体颤抖，表情极度痛苦悲伤\",\n    \"抽泣\": \"小声啜泣，眼泪一滴滴落下，表情楚楚可怜\",\n    // 震惊类\n    \"震惊\": \"眼睛瞪得很大，嘴巴张成O型，眉毛高高扬起，表情不敢置信\",\n    \"惊讶\": \"眼睛睁大，嘴巴微张，眉毛上扬，手可能捂住嘴巴，表情意外\",\n    \"吃惊\": \"眼睛和嘴巴都张得很大，眉毛扬起，身体向后仰，表情震惊\",\n    \"懵逼\": \"眼神迷茫，嘴巴微张，表情呆滞，头上可能有问号\",\n    \"目瞪\": \"眼睛瞪得像铜铃，嘴巴紧闭，表情严肃专注\",\n    \"傻眼\": \"眼神空洞，嘴巴半张，表情呆滞迷茫，不知所措\",\n    \"石化\": \"全身僵硬如石头，眼神空洞，表情凝固，一动不动\",\n    \"惊呆\": \"嘴巴张得能塞下鸡蛋，眼睛瞪得很大，表情完全震惊\",\n    // 动作类\n    \"比心\": \"双手在头顶或胸前做爱心手势，眼睛弯弯，表情甜美可爱\",\n    \"点赞\": \"竖起大拇指，脸上带着认可的笑容，表情肯定赞许\",\n    \"鼓掌\": \"双手拍手鼓掌，表情兴奋开心，为某事喝彩\",\n    \"加油\": \"握拳举起，表情坚定有力，充满斗志和能量\",\n    \"握拳\": \"双手紧握拳头，表情严肃坚定，充满决心\",\n    \"竖拇指\": \"竖起大拇指，脸上带着赞赏的笑容，表情肯定\",\n    \"胜利\": \"做V字手势，表情兴奋得意，庆祝胜利的样子\",\n    \"耶\": \"双手做V字手势举过头顶，表情兴奋开心，很有活力\",\n    // 其他常见表情\n    \"摇头\": \"头左右摇摆，表情无奈或否定，眼神略显疲惫\",\n    \"点头\": \"头上下点动，表情认真专注，表示同意理解\",\n    \"摆手\": \"手左右摆动，表情客气或拒绝，嘴角带着礼貌微笑\",\n    \"招手\": \"手高高举起挥动，表情开心热情，很有活力\",\n    \"拜拜\": \"手掌向外挥动，表情略带不舍，告别的样子\",\n    \"挥手\": \"手臂大幅挥动，表情热情开朗，打招呼的样子\",\n    \"敬礼\": \"手举到额头敬礼，表情严肃认真，很有仪式感\",\n    \"抱抱\": \"张开双臂做拥抱姿势，表情温暖慈爱，很有爱意\",\n    // 生活状态类\n    \"吃饭\": \"手拿筷子或叉子，嘴巴咀嚼，表情满足享受，很香的样子\",\n    \"喝水\": \"手拿水杯喝水，表情满足，可能有水珠在嘴角\",\n    \"睡觉\": \"眼睛紧闭，表情安详，可能有呼噜声或Z字睡眠符号\",\n    \"起床\": \"伸懒腰，眼睛半睁，表情迷糊困倦，刚醒的样子\",\n    \"刷牙\": \"手拿牙刷，嘴巴张开，表情认真，很讲卫生的样子\",\n    \"洗脸\": \"双手捧水洗脸，表情清爽，水珠在脸上闪闪发光\",\n    \"跑步\": \"身体前倾跑步姿势，表情专注坚持，汗水在脸上\",\n    \"健身\": \"做运动姿势，表情坚毅，充满力量和活力\",\n    // 工作状态类\n    \"工作\": \"坐在电脑前专注工作，表情认真严肃，很专业的样子\",\n    \"摸鱼\": \"偷偷看手机或做其他事，表情鬼鬼祟祟，很狡猾的样子\",\n    \"划水\": \"表情悠闲放松，手可能在摸鱼，不太认真工作的样子\",\n    \"躺平\": \"整个人瘫软躺下，表情无所谓，完全放弃的样子\",\n    \"咸鱼\": \"表情死鱼眼，身体瘫软，完全没有干劲的样子\",\n    \"摆烂\": \"表情无所谓，双手一摊，完全放弃治疗的样子\",\n    \"佛系\": \"表情淡然平静，眼神清澈，一切随缘的样子\",\n    \"淡定\": \"表情冷静从容，眼神坚定，处变不惊的样子\",\n    // 情感表达类\n    \"爱你\": \"做爱心手势，表情甜蜜温柔，眼中充满爱意\",\n    \"么么哒\": \"嘴巴嘟起做飞吻动作，表情可爱撒娇，很甜美\",\n    \"亲亲\": \"嘴巴嘟起亲吻状，眼睛弯弯，表情甜蜜可爱\",\n    \"想你\": \"手托腮思念状，表情温柔深情，眼中有思念\",\n    \"抱抱\": \"张开双臂要拥抱，表情温暖慈爱，很有爱意\",\n    \"安慰\": \"轻拍肩膀，表情温和关怀，眼神温柔体贴\",\n    \"关心\": \"眼神关切，表情温和，手可能轻抚对方\",\n    \"疼爱\": \"表情慈爱温柔，眼中满含爱意，很宠溺的样子\",\n    // 拒绝类\n    \"拒绝\": \"摆手拒绝，表情坚决，眼神坚定不移\",\n    \"不要\": \"双手交叉做X状，表情坚决拒绝，很有态度\",\n    \"走开\": \"手做赶走动作，表情不耐烦，眼神嫌弃\",\n    \"滚蛋\": \"手指向远方，表情愤怒不悦，很生气的样子\",\n    \"讨厌\": \"表情嫌弃，眉头紧皱，嘴角下撇，很不喜欢\",\n    \"嫌弃\": \"翻白眼，嘴角下撇，表情鄙视不屑，很嫌弃\",\n    \"鄙视\": \"眼神轻蔑，嘴角上扬，表情高傲不屑，很看不起\",\n    \"白眼\": \"眼球向上翻，只露出眼白，表情无语鄙视\",\n    // 思考类\n    \"思考\": \"手托下巴，眉头微皱，眼神专注，表情深沉思索\",\n    \"沉思\": \"手托腮，眼神深邃，表情严肃专注，陷入深思\",\n    \"疑问\": \"头微侧，眉毛上扬，眼神困惑，头顶可能有问号\",\n    \"困惑\": \"眉头紧皱，眼神迷茫，表情不解，很困惑的样子\",\n    \"纠结\": \"手抓头发，表情痛苦，眉头紧锁，很纠结的样子\",\n    \"选择\": \"一手托腮一手比划，表情犹豫，在做选择\",\n    \"犹豫\": \"表情不定，眼神飘移，手可能在比划，很犹豫\",\n    \"迷茫\": \"眼神空洞，表情茫然，不知道方向的样子\",\n    // 兴奋类\n    \"兴奋\": \"眼睛发光，表情激动，手可能高举，很兴奋的样子\",\n    \"激动\": \"表情亢奋，眼神发亮，身体可能在颤抖，很激动\",\n    \"开森\": \"表情超级开心，眼睛弯弯，嘴巴张大笑，很愉快\",\n    \"嗨起\": \"双手高举，表情兴奋，很有活力，准备狂欢\",\n    \"狂欢\": \"手舞足蹈，表情狂欢，眼神兴奋，很嗨的样子\",\n    \"庆祝\": \"举杯庆祝或鼓掌，表情喜悦，为成功而开心\",\n    \"撒花\": \"做撒花动作，表情开心，庆祝胜利的样子\",\n    \"放烟花\": \"手做放烟花动作，表情兴奋，眼中有烟花光芒\",\n    // 疲惫类\n    \"累了\": \"表情疲惫，眼神无力，身体瘫软，很累的样子\",\n    \"困了\": \"眼皮下垂，打哈欠，表情困倦，想睡觉的样子\",\n    \"饿了\": \"手摸肚子，表情可怜，眼神渴望，很饿的样子\",\n    \"渴了\": \"伸舌头，表情干渴，眼神渴望，想喝水的样子\",\n    \"病了\": \"脸色苍白，表情虚弱，手可能捂额头，很不舒服\",\n    \"痛了\": \"表情痛苦，眉头紧皱，手捂住疼痛部位\",\n    \"晕了\": \"眼睛转圈圈，表情迷糊，头上有星星转动\",\n    \"醉了\": \"脸红红的，眼神迷离，身体摇晃，喝醉的样子\",\n    // 舒适类\n    \"冷了\": \"身体瑟瑟发抖，表情冷得发紫，手抱住身体\",\n    \"热了\": \"汗流浃背，表情很热，手可能在扇风，很热的样子\",\n    \"爽了\": \"表情享受满足，眼神陶醉，很舒服的样子\",\n    \"满足\": \"表情心满意足，眼神温和，嘴角微笑，很满足\",\n    \"舒服\": \"表情放松惬意，眼神安详，很舒服的样子\",\n    \"惬意\": \"表情悠闲自在，眼神放松，很惬意的样子\",\n    \"享受\": \"表情陶醉，眼睛微闭，很享受当下的感觉\",\n    \"陶醉\": \"表情沉醉，眼神迷离，完全沉浸在美好中\",\n    // 忙碌类\n    \"忙碌\": \"表情匆忙，眼神专注，手在快速做事，很忙的样子\",\n    \"匆忙\": \"表情急躁，步伐匆忙，很赶时间的样子\",\n    \"赶时间\": \"看手表，表情焦急，步伐快速，很着急\",\n    \"来不及\": \"表情惊慌，手忙脚乱，很着急的样子\",\n    \"慌张\": \"表情慌乱，眼神惊慌，手足无措的样子\",\n    \"紧张\": \"表情严肃，眉头紧皱，身体僵硬，很紧张\",\n    \"焦虑\": \"表情不安，眼神焦虑，手可能在搓动，很焦虑\",\n    \"压力大\": \"表情沉重，眉头紧锁，肩膀沉重，压力很大\",\n    // 无聊类\n    \"无聊\": \"表情无精打采，眼神空洞，托着下巴，很无聊\",\n    \"发呆\": \"眼神空洞，表情呆滞，什么都不想的样子\",\n    \"走神\": \"眼神飘忽，表情恍惚，注意力不集中\",\n    \"放空\": \"表情空白，眼神空洞，大脑一片空白\",\n    \"失神\": \"眼神涣散，表情茫然，精神不集中\",\n    \"恍惚\": \"表情迷糊，眼神不聚焦，很恍惚的样子\",\n    \"迷糊\": \"眼神迷茫，表情糊涂，搞不清状况\",\n    \"懵懂\": \"表情天真，眼神纯真，很懵懂可爱的样子\"\n};\n// 获取表情描述，如果没有映射就返回原关键词\nfunction getEmotionDescription(keyword) {\n    return EMOTION_MAPPINGS[keyword] || keyword;\n}\n// 获取所有支持的表情关键词\nfunction getSupportedEmotions() {\n    return Object.keys(EMOTION_MAPPINGS);\n}\n// 检查关键词是否有对应的详细描述\nfunction hasEmotionMapping(keyword) {\n    return keyword in EMOTION_MAPPINGS;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/constants/emotionMappings.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenerate-emojis%2Froute&page=%2Fapi%2Fgenerate-emojis%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenerate-emojis%2Froute.ts&appDir=F%3A%5Cemjio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=F%3A%5Cemjio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();